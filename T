#!/bin/bash

[[ "$1" == -h ]] &&
	{
	cat <<'EOH'
NAME
	T - a tmux/vim pipe debugger

SYNOPSIS
	T [options] [buffer name]

OPTIONS
	-r		reset
	-c		clear
	-k		kill

	-n		size
	-s		spell
	-A		ANSI

DESCRIPTION
	
EOH
	exit
	}

[[ "$1" == -r ]] &&
	{
	[[ -e T_pane && $(tmux list-panes | rg $(cat T_pane)) ]] && tmux kill-pane -t "$(cat T_pane)"
	rm -f T_*
	exit
	}

[[ "$1" == -c ]] &&
	{
	[[ -e T_pane && $(tmux list-panes | rg $(cat T_pane)) ]] && { tmux send-keys -t "$(cat T_pane)" ':%bdelete' C-M ; }
	# rm -f T_*
	exit
	}

[[ "$1" == -k ]] && { kill_pane=1 ; shift ; }

[[ "$1" == -n ]] && { shift ; size=$1 ; shift ; [[ $size == 0 ]] && out_size=cat || out_size="head -n $size" ; } || out_size="head -n 500"
[[ "$1" == -s ]] && { spell=" | set spell" ; shift ; } || spell=" | set nospell"
[[ "$1" == -A ]] && { ANSI="| AnsiEsc" ; shift ; } || ANSI=

show_output() { tmux send-keys -t "$(cat T_pane)" ":tab drop $1 $spell $ANSI " C-M ; }

$out_size >"T_$1"

my_pane=$(tmux display-message -p "#D")

[[ -e T_pane && $(tmux list-panes | rg $(cat T_pane)) ]] && show_output "T_$1" || 
	{ pane=$(tmux split-window -P -F '#D' -l 80% vi) ; echo "$pane" >T_pane ; show_output "T_$1" ; }

tmux select-pane -t $my_pane

[[ "$1" ]] && cat "T_$1" || { ((kill_pane)) && { read -sn 1 </dev/tty ; tmux kill-pane -t "$(cat T_pane)" ; } ; }
true
